apiVersion: v1
kind: Service
metadata:
  name: auth-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: auth
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: tickets
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: orders-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: orders
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002
---
apiVersion: v1
kind: Service
metadata:
  name: client-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: client
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: redis-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      protocol: TCP
      port: 5672
      targetPort: 5672
    - name: management
      protocol: TCP
      port: 15672
      targetPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: auth-mongo-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: auth-mongo
  ports:
    - protocol: TCP
      port: 27018
      targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: tickets-mongo-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: tickets-mongo
  ports:
    - protocol: TCP
      port: 27019
      targetPort: 27017
